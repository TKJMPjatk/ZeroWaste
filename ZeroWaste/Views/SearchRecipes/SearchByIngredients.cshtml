@using Newtonsoft.Json
@using ZeroWaste.Data.ViewModels.RecipeIngredients
@using ZeroWaste.Data.ViewModels.RecipeSearch;
@model SearchByIngredientsVm
@{
    ViewData["Title"] = "Szukaj po składnikach";
    var ingredients = ViewBag.Ingredients as IEnumerable<ExistingIngredient>;
    var data = JsonConvert.SerializeObject(ingredients);
}
<div class="view-search">
    <div class="col-md-4 offset-4">
        <div class="row">
            <div class="text-center">
                <h3>Uzupełnij składniki do wyszukania przepisu</h3>
            </div>
        </div>
        <br />
        <form asp-action="AddIngredient" asp-controller="SearchRecipes">
            @if (@Model.SingleIngredientToSearchVm != null)
            {
                @for (int i = 0; i < @Model.SingleIngredientToSearchVm.Count; i++)
                {
                    @Html.HiddenFor(x => x.SingleIngredientToSearchVm[i].Name)
                    @Html.HiddenFor(x => x.SingleIngredientToSearchVm[i].Quantity)
                    @Html.HiddenFor(x => x.SingleIngredientToSearchVm[i].Unit)
                    @Html.HiddenFor(x => x.SingleIngredientToSearchVm[i].Index)
                }
            }
            <div class="row">
                <div class="col-md-4">
                    @*<input type="text" id="nameInput" asp-for="@Model.Name" placeholder="składnik"/>*@
                    @Html.DropDownListFor(x => x.Name, new SelectList(ViewBag.Ingredients, "Name", "Name"), new {@class = "form-select js-example-basic-single"})
                    <span class="text-danger" asp-validation-for="@Model.Name"></span>
                    <span class="text-danger" id="notExistIgnredient" style="visibility: hidden">Brak składnika na liście</span>
                </div>
                <div class="col-md-2">
                    <input type="text" class="form-control" id="unitOfMeasure" asp-for="@Model.Unit" tabindex="-1" style="pointer-events: none;"/>
                </div>
                <div class="col-md-3">
                    <input type="number" class="form-control" id="quantityInput" asp-for="@Model.Quantity"/>
                    <span class="text-danger" asp-validation-for="@Model.Quantity"></span>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-antique-white text-oxford-blue" id="addIngredientBtn">
                        <i class="bi bi-plus"></i>
                    </button>
                </div>
            </div>
        </form>
        <div class="row">
            <div class="col-md-6 offset-3">
                <form asp-action="SearchByIngredientsResult">
                    @if (@Model.SingleIngredientToSearchVm != null)
                    {
                        @for (int i = 0; i < @Model.SingleIngredientToSearchVm.Count; i++)
                        {
                            @Html.HiddenFor(x => x.SingleIngredientToSearchVm[i].Name)
                            @Html.HiddenFor(x => x.SingleIngredientToSearchVm[i].Quantity)
                            @Html.HiddenFor(x => x.SingleIngredientToSearchVm[i].Unit)
                            @Html.HiddenFor(x => x.SingleIngredientToSearchVm[i].Index)
                        }
                    }
                    <input type="submit" class="btn btn-umber text-platinum width-max" value="Wyszukaj"/>
                </form>
            </div>
        </div>
        <br />
    </div>
    <div class="col-md-6 offset-3">
        <div class="row">
            <div class="text-center">
                <p>Składniki</p>
            </div>
        </div>
        <div class="row">
            <table>
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Produkt</th>
                        <th>Ilość</th>
                        <th>Jednostka</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                @if(@Model.SingleIngredientToSearchVm != null){
                    @foreach (var item in @Model.SingleIngredientToSearchVm)
                    {
                        <tr>
                            <td>@item.Index</td>
                            <td>@item.Name</td>
                            <td>@item.Quantity</td>
                            <td>@item.Unit</td>
                            <td>
                                <form asp-controller="SearchRecipes" asp-action="DeleteIngredient">
                                    @for (int i = 0; i < @Model.SingleIngredientToSearchVm.Count; i++)
                                    {
                                        @Html.HiddenFor(x => x.SingleIngredientToSearchVm[i].Name)
                                        @Html.HiddenFor(x => x.SingleIngredientToSearchVm[i].Unit)
                                        @Html.HiddenFor(x => x.SingleIngredientToSearchVm[i].Index)
                                        <input type="hidden" asp-for="SingleIngredientToSearchVm[i].Quantity" value="@Model.SingleIngredientToSearchVm[i].Quantity"/>
                                    }
                                    <input type="hidden" asp-for="Name" value="@item.Name"/>
                                    <button class="btn btn-pale-pink">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                }
                </tbody>
            </table>
        </div>
    </div>
</div>
@section Scripts
    {
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
    <link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css" rel="Stylesheet" type="text/css" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.js-example-basic-single').select2();
        });
    </script>
    <script>
        $("#nameInput").autocomplete({
            source: "/SearchRecipes/SearchByIngredientsAuto"
        });
    </script>
    <script>
        $("#document").ready(function () {
            $("#nameInput").val('');
            $("#quantityInput").val(0);
        })
    </script>
    <script>
        $('#Name').on('change', function () {
            var select = document.getElementById('Name');
            var value = select.options[select.selectedIndex].text;

            var ingredientsJson = JSON.parse(he.decode('@data'));
            var filtered = ingredientsJson.filter(a => a.Name == value);

            if (!filtered[0]) {
                $("#addIngredientBtn").prop('disabled', true);
                $("#notExistIgnredient").css('visibility', 'visible');
                return;
            }

            $("#addIngredientBtn").prop('disabled', false);
            $("#notExistIgnredient").css('visibility', 'hidden');
            var unitOfMeasure = filtered[0]['UnitOfMeasure']['Name'];
            document.getElementById('unitOfMeasure').value = unitOfMeasure;
            $('#unitOfMeasure').val(unitOfMeasure);
        });
    </script>
    @*<script>
        $("#nameInput").focusout(function (){
            var _url = '/SearchRecipes/SearchByIngredientsAuto';
            var ingredientsList = [];
            $.ajax({
                url: _url,
                type: "GET",
                dataType:"json",
                success: function(data){
                    data = data.map(function(x) {
                      return x.toLowerCase()
                    })
                    var tmp = jQuery.inArray($("#nameInput").val().toLowerCase(), data);
                    if (tmp === -1){
                        $("#addIngredientBtn").prop('disabled', true);
                        $("#notExistIgnredient").css('visibility', 'visible');
                    }
                    else{
                        $("#addIngredientBtn").prop('disabled', false);
                        $("#notExistIgnredient").css('visibility', 'hidden');
                    }
                }
            });
            })
    </script>*@
    }