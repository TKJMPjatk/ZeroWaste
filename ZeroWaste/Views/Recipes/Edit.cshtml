@model EditRecipeVM
@using ZeroWaste.Data;
@using ZeroWaste.Data.ViewModels.ExistingRecipe
@using ZeroWaste.Models

@{
    ViewData["Title"] = "Edycja istniejącego przepisu";
}

<div class="row">
    <div class="col-md-10 offset-1">
        <p>
            <h3>Edycja istniejącego przepisu</h3>
        </p>

        <form id="RecipeEdit" class="row" asp-action="Edit" asp-controller="Recipes" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="col-md-12 mt-1rem">
                <i class="bi bi-award form-icon"></i><label asp-for="Title" class="control-label form-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="col-md-12 mt-1rem">
                <i class="bi bi-clock-history form-icon"></i><label asp-for="EstimatedTime" class="control-label form-label"></label>
                <input asp-for="EstimatedTime" class="form-control" type="number" min="1" max="1000" step="1" />
                <span asp-validation-for="EstimatedTime" class="text-danger"></span>
            </div>

            <div class="col-md-12 mt-1rem">
                <i class="bi bi-star form-icon"></i><label asp-for="DifficultyLevel" class="control-label form-label"></label>
                <select asp-for="DifficultyLevel" class="form-select" aria-label="Default select example">
                    <option selected>Wybierz poziom trudności</option>
                    <option value="1">Banalny</option>
                    <option value="2">Łatwy</option>
                    <option value="3">Średni</option>
                    <option value="4">Trudny</option>
                    <option value="5">Bardzo trudny</option>
                </select>
                <span asp-validation-for="DifficultyLevel" class="text-danger"></span>
            </div>

            <div class="col-md-12 mt-1rem">
                <i class="bi bi-ui-radios form-icon"></i><label asp-for="CategoryId" class="control-label form-label"></label>
                @Html.DropDownList("CategoryId",ViewBag.Categories as SelectList, new { @class = "form-select"})
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>

            @Html.HiddenFor(model => model.PhotosToDelete)
            @Html.HiddenFor(model => model.NewPhotosNamesToSkip)
            <div class="col-md-12 mt-1rem">
                <i class="bi bi-camera form-icon"></i><label class="control-label form-label">Wybierz zdjęcia</label>
                <input type="file" class="form-control" id="filesUpload" name="filesUpload" multiple />
            </div>

            <div class="col-md-12 mt-2rem">
                <div class="card-group" id="photosDiv" name="photosDiv">
                    @for (int i = 0; i < Model.Photos.Count(); i++)
                    {
                        var firstImgSrc = "";
                        var firstItem = Model.Photos[i];
                        if (firstItem != null && firstItem.BinaryPhoto.Length > 0)
                        {
                            var firstBase64 = Convert.ToBase64String(firstItem.BinaryPhoto);
                            firstImgSrc = String.Format("data:image/jpeg;base64,{0}", firstBase64);
                        }
                   
                        <div class="card">
                            <img src="@firstImgSrc" class="card-img-top" alt="@Url.Content(Model.PhotoAlt)">
                            <div class="card-body">
                               <p>Stare zdjęcie</p>
                                <hr />
                                <button class="btn btn-default" type="button" onclick="updatePhotosToDelete(@Model.Photos[i].Id)">
                                    <i class="bi bi-trash"> </i>
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="col-md-12 mt-1rem">
                <i class="bi bi-chat-square-text form-icon"></i><label asp-for="Description" class="control-label form-label"></label>
                <textarea class="form-control" asp-for="Description" rows="5"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="col-md-12 mt-2rem">
                <a asp-action="Index" asp-controller="Home" class="btn btn-default btn-pale-pink float-left">Powrót</a>
                <button id="RecipeEditSubmit" type="submit" value="Zapisz przepis i przejdź do składników" class="btn btn-default btn-pale-pink fr" ></button>
            </div>
        </form>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        $('#filesUpload').on('change', function () {
            document.getElementById('NewPhotosNamesToSkip').value = "";
            refreshPhotos();
        });

        function updatePhotosToDelete(val) {
            var elementVal = document.getElementById('PhotosToDelete').value;
            elementVal = elementVal + val + '|';
            document.getElementById('PhotosToDelete').value = elementVal;
            refreshPhotos();
        };

        function updateNewPhotosNamesToSkip(val) {
            var elementVal = document.getElementById('NewPhotosNamesToSkip').value;
            elementVal = elementVal + val + '|';
            document.getElementById('NewPhotosNamesToSkip').value = elementVal;
            refreshPhotos();
        };

        function refreshPhotos() {
            var newFiles = $('#filesUpload').prop('files');
            var photosToDeleteStr = document.getElementById('PhotosToDelete').value;
            var photosToDeleteArr = photosToDeleteStr.split('|');

            var newPhotosToSkipStr = document.getElementById('NewPhotosNamesToSkip').value;
            var newPhotosToSkipArr = newPhotosToSkipStr.split('|');

            var oldPhotos = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Photos));

            $("#photosDiv").empty();
            for (var j = 0; j < oldPhotos.length; j++) {
                if (!photosToDeleteArr.includes(oldPhotos[j].Id.toString())) {
                    var div = "<div class=\"card\">" +
                        "<img src= data:image/jpeg;base64," + oldPhotos[j].BinaryPhoto + " class=\"card-img-top\">" +
                    "<div class=\"card-body\" >" +
                        "<p>Stare zdjęcie</p>" +
                        "<hr/>" +
                        "<button class=\"btn btn-default\" type = \"button\" onclick = \"updatePhotosToDelete(" + oldPhotos[j].Id + ")\">" +
                        "<i class=\"bi bi-trash\"></i>" +
                        "</button>" +
                        "</div>"+
                        "</div>";
                    $("#photosDiv").append(div);
                }
            }
            if (typeof newFiles != 'undefined') {

                for (var i = 0; i < newFiles.length; i++) {
                    const reader = new FileReader();
                    var file = newFiles[i];
                    var namee = file.name;
                    reader.readAsBinaryString(file);

                    if (!newPhotosToSkipArr.includes(namee)) {

                        reader.onload = function () {
                            var div = "<div class=\"card\">" +
                                "<img src= data:image/jpeg;base64," + btoa(reader.result) + " class=\"card-img-top\">" +
                            "<div class=\"card-body\" >" +
                                "<p>Nowe zdjęcie</p>" +
                                "<hr/>" +
                                "<button class=\"btn btn-default\" type = \"button\" onclick = \"updateNewPhotosNamesToSkip('" + namee + "')\" >" +
                                "<i class=\"bi bi-trash\"></i>" +
                                "</button>" +
                                "</div>"+
                                "</div>";
                            $("#photosDiv").append(div);
                        }
                    }
                }
            }
        };
    </script>
}